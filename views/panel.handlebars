<div>
    <div class="fixed-header" style="background: black; z-index: 1000;">
        <div style=" margin-top: 35px;">
            <i onclick="window.history.back()" style="color:white; cursor: pointer; padding-bottom: 10px"
               class="fa fa-arrow-left"></i>
            <i style="color:white; cursor: pointer; margin-bottom: 10px; float: right"
               class="fa fa-cog" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
               id="settingsDropdown"></i>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="settingsDropdown">
                <div class="dropdown-item">
                    Zoom:
                    <div onclick="modifyZoom(-0.1)" style="font-family: monospace" class="btn btn-warning btn-sm">-
                    </div>
                    <span id="zoomSize" style="padding-left: 5px; padding-right: 5px">100%</span>
                    <div onclick="modifyZoom(0.1)" style="font-family: monospace" class="btn btn-warning btn-sm">+</div>
                </div>
            </div>
            <br/>
            <div id="panelInputContainer" class="focusedPanelContainer" onclick="focusInput()">
                <img src="/assets/caret-right.png"
                     style="height: 20px; width: 5px; padding: 0; opacity: 0.7; margin:0; margin-bottom: 8px"/>
                <span id="panelTextInput" contenteditable="true"></span>
                <button id="caret" for="panelTextInput">&nbsp;</button>
            </div>
            <div id="panelResults"
                 style="color: white; background: rgb(242, 165, 71); width: calc(100% - 100px); position: fixed; z-index: 5000">
            </div>
        </div>
    </div>
    <div id="panelBody" style="height: calc(100vh - 100px); width: 100%;">
        <div id="zoomedBody">
            {{{panelBody}}}
        </div>
    </div>
    <script>

        let zoomFactor = 1.0

        function modifyZoom(factor) {
            if (zoomFactor + factor > 0) {
                zoomFactor += factor;
                document.getElementById("zoomedBody").style.zoom = (zoomFactor * 100) + "%"
                if (Math.round(zoomFactor * 100) < 100) {
                    $('#zoomSize').html("<span>&nbsp;</span>" + Math.round(zoomFactor * 100) + "%")
                } else {
                    $('#zoomSize').html(Math.round(zoomFactor * 100) + "%")
                }
            }
        }

        const input = document.getElementById('panelTextInput');
        const caret = document.getElementById('caret');

        input.focus()

        function focusInput() {
            $('#panelResults').show()
            $('#panelInputContainer').addClass('focusedPanelContainer')
            input.focus()
        }

        input.addEventListener('blur', (e) => {
            $('#panelResults').hide()
            $('#panelInputContainer').removeClass('focusedPanelContainer')
        });

        function isNumeric(str) {
            return !isNaN(str) && !isNaN(parseFloat(str))
        }

        let panelInput = document.getElementById("panelTextInput");
        panelInput.addEventListener('input', function () {
            const searchInput = $('#panelTextInput').html()
            if (!isNumeric(searchInput)) {
                updateSearch(searchInput)
            }
        });

        document.addEventListener('keydown', function (e) {
            if (e.target.tagName === "BODY") {
                focusInput()
            }
            if (e.key === 'Enter' && e.target.id === 'panelTextInput') {
                e.preventDefault()
            }
        });

        document.addEventListener('keyup', function (e) {
            if (e.key === 'Enter' && e.target.id === 'panelTextInput') {
                let functionInput = $('#panelTextInput').html();
                $('#panelTextInput').html('')
                if (isNumeric(functionInput)) {
                    keyShortcuts[parseInt(functionInput)]()
                    return;
                }
                const args = functionInput.toUpperCase().split(" ")
                $('#panelResults').html('')
                if (args.length > 0) {
                    let chosenFunction = args.shift();
                    location.href = `/panel/${chosenFunction}?q=${encodeURIComponent(args)}`
                }
            }
        });


        const fuse = new Fuse(functions, {
            keys: ['command', 'metadata.description']
        })

        function updateSearch(searchString) {
            $('#panelResults').html('')
            fuse.search(searchString.split(" ")[0]).slice(0, 5).forEach(x => {
                $('#panelResults').append(`<span style="margin-left: 10px; padding: 0">
                    <a style="text-decoration: none; color: white" href="/panel/${x.command}">
                        <b>${x.command}</b> (${x.metadata.description})
                    </a>
                </span><br/>`)
                if (x.metadata.commands) {
                    x.metadata.commands.forEach(command => {
                        $('#panelResults').append(`<span style="margin-left: 30px; padding: 0"><b>${command.syntax}</b> (${command.description})</span><br/>`)
                    })
                }
            })
        }

        // $("body").bind('keydown', function (e) {
        //     $('#panelTextInput').focus();
        // });

        $('.dropdown-menu').on('click', function (e) {
            e.stopPropagation();
        });

    </script>
</div>
<style>
        {{#unless props.scratchpad}}
        * {
            font-family: 'Ubuntu', sans-serif;
        }
        {{/unless}}
</style>
